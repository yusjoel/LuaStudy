# config file for Koihik / LuaFormatter (https://github.com/Koihik/LuaFormatter)
# https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md

	  
# Column limit of one line
column_limit: 140

# Number of spaces used for indentation
indent_width: 4

# Use tab for indent
use_tab: false

# Number of spaces used per tab
tab_width: 4

# Indent width for continuations line
continuation_indent_width: 4

# Inserts a space on function calls with parentheses omitted.
spaces_before_call: 1

# Allow format simple control block(e.g., if, while, for, ...) to one line.
keep_simple_control_block_one_line: false

# Allow format simple function to one line.
keep_simple_function_one_line: false

# Align arguments of a function call if there is a line break. If false, use continuation_indent_width to indentation.
align_args: false

# Break after '(' of function call if columns greater than column_limit.
break_after_functioncall_lp: false

#  Break before ')' of function call if columns greater than column_limit.
break_before_functioncall_rp: false

# Inserts spaces inside the parenthesis in a function call.
spaces_inside_functioncall_parens: false

# Inserts spaces inside the parenthesis in a function header.
spaces_inside_functiondef_parens: false

# Align parameter of function define if there is a line break. if false, use continuation_indent_width to indentation.
align_parameter: false

# Chop down all parameters if the function declaration doesnâ€™t fit on a line.
chop_down_parameter: false

# Break after '(' of function define if columns greater than column_limit.
break_after_functiondef_lp: false

# Break before ')' of function define if columns greater than column_limit.
break_before_functiondef_rp: false

# Align fields of a table if there is a line break. if false, use indent_width to indentation.
align_table_field: false

# Break after '{' of a table if columns greater than column_limit.
break_after_table_lb: false

# Break before '}' of a table if columns greater than column_limit.
break_before_table_rb: false

# Chop down any table.
chop_down_table: false

# Chop down table if a table contains a key.
chop_down_kv_table: true

# Define character to separate table fields.
table_sep: ","

# The column limit of each line of a table. Default value the same as column_limit value.
# column_table_limit: column_limit

# Add an extra field separator after the last field unless the table is in a single line.
extra_sep_at_table_end: true

# Inserts spaces inside the braces in a table constructor.
spaces_inside_table_braces: false

# Put break after operators if columns greater than column_limit. If false, put break before operators.
break_after_operator: false

# Transform string literals to use a single quote.
double_quote_to_single_quote: false

# Transform string literals to use double quotes.
single_quote_to_double_quote: false

# Inserts spaces around the equal sign in key/value fields. Other assignments are not affected, though they may be affected by other options or behavior of the formatter.
spaces_around_equals_in_field: true

# Line brakes after the function body
line_breaks_after_function_body: 1

# input(determined by the input content),
# os(Use line ending of the current Operating system), 
# lf(Unix style "\n"), crlf(Windows style "\r\n"), cr(classic Max style "\r")
line_separator: crlf